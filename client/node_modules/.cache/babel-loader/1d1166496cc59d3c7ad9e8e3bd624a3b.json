{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/ReviewEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReviewEdit(props) {\n  _s();\n\n  const [reviewData, setReviewData] = useState({\n    content: \"\"\n  });\n  const {\n    content\n  } = reviewData;\n  const params = useParams();\n  const {\n    handleOpen,\n    reviewUpdate,\n    reviews,\n    book\n  } = props;\n  console.log(book === null || book === void 0 ? void 0 : book.id, params);\n  useEffect(() => {\n    const prefillReviewData = () => {\n      const reviewItem = reviews.find(review => (review === null || review === void 0 ? void 0 : review.id) === Number(params.id));\n      console.log(reviewItem);\n      setReviewData({\n        content: reviewItem === null || reviewItem === void 0 ? void 0 : reviewItem.content,\n        book_id: reviewItem === null || reviewItem === void 0 ? void 0 : reviewItem.book_id,\n        user_id: reviewItem === null || reviewItem === void 0 ? void 0 : reviewItem.user_id\n      });\n    };\n\n    if (reviews === null || reviews === void 0 ? void 0 : reviews.length) {\n      prefillReviewData();\n    }\n  }, [reviews, params.id]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setReviewData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"modal-container\" onClick={(e) => handleOpen(false)}>\n    // <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n    _jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        reviewUpdate(book === null || book === void 0 ? void 0 : book.id, params.id, reviewData);\n        handleOpen(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Edit Review:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          rows: 10,\n          cols: 78,\n          name: \"content\",\n          value: content,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit\",\n        children: \"UPDATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) // </div>\n    // </div>\n\n  );\n}\n\n_s(ReviewEdit, \"LnTOX7V0b7pu76wIDhzWS6RxDKc=\", false, function () {\n  return [useParams];\n});\n\n_c = ReviewEdit;\nexport default ReviewEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewEdit\");","map":{"version":3,"sources":["/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/ReviewEdit.jsx"],"names":["React","useState","useEffect","useParams","ReviewEdit","props","reviewData","setReviewData","content","params","handleOpen","reviewUpdate","reviews","book","console","log","id","prefillReviewData","reviewItem","find","review","Number","book_id","user_id","length","handleChange","e","name","value","target","prevState","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC;AAC3CO,IAAAA,OAAO,EAAE;AADkC,GAAD,CAA5C;AAIA,QAAM;AAAEA,IAAAA;AAAF,MAAcF,UAApB;AACA,QAAMG,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,OAA5B;AAAqCC,IAAAA;AAArC,MAA8CR,KAApD;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEG,EAAlB,EAAsBP,MAAtB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,iBAAiB,GAAG,MAAM;AAC9B,YAAMC,UAAU,GAAGN,OAAO,CAACO,IAAR,CAAcC,MAAD,IAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEJ,EAAR,MAAeK,MAAM,CAACZ,MAAM,CAACO,EAAR,CAA9C,CAAnB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAX,MAAAA,aAAa,CAAC;AACZC,QAAAA,OAAO,EAAEU,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEV,OADT;AAEZc,QAAAA,OAAO,EAAEJ,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEI,OAFT;AAGZC,QAAAA,OAAO,EAAEL,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEK;AAHT,OAAD,CAAb;AAKD,KARD;;AASA,QAAIX,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEY,MAAb,EAAqB;AACnBP,MAAAA,iBAAiB;AAClB;AACF,GAbQ,EAaN,CAACL,OAAD,EAAUH,MAAM,CAACO,EAAjB,CAbM,CAAT;;AAeA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAtB,IAAAA,aAAa,CAAEuB,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5B,OAACH,IAAD,GAAQC;AAFoB,KAAhB,CAAD,CAAb;AAID,GAND;;AAQA;AAAA;AACE;AACA;AACI;AACE,MAAA,QAAQ,EAAGF,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACK,cAAF;AACApB,QAAAA,YAAY,CAACE,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,EAAP,EAAWP,MAAM,CAACO,EAAlB,EAAsBV,UAAtB,CAAZ;AACAI,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALH;AAAA,8BAOE;AAAA,gDAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,IAAI,EAAE,EAHR;AAIE,UAAA,IAAI,EAAC,SAJP;AAKE,UAAA,KAAK,EAAEF,OALT;AAME,UAAA,QAAQ,EAAEiB;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAkBE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHN,CAwBI;AACA;;AAzBJ;AA2BD;;GA7DQrB,U;UAMQD,S;;;KANRC,U;AA+DT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ReviewEdit(props) {\n  const [reviewData, setReviewData] = useState({\n    content: \"\",\n  });\n\n  const { content } = reviewData;\n  const params = useParams();\n  const { handleOpen, reviewUpdate, reviews, book } = props;\n\n  console.log(book?.id, params)\n\n  useEffect(() => {\n    const prefillReviewData = () => {\n      const reviewItem = reviews.find((review) => review?.id === Number(params.id));\n      console.log(reviewItem)\n      setReviewData({\n        content: reviewItem?.content,\n        book_id: reviewItem?.book_id,\n        user_id: reviewItem?.user_id\n      });\n    };\n    if (reviews?.length) {\n      prefillReviewData();\n    }\n  }, [reviews, params.id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setReviewData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    // <div className=\"modal-container\" onClick={(e) => handleOpen(false)}>\n    // <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            reviewUpdate(book?.id, params.id, reviewData);\n            handleOpen(false)\n          }}\n        >\n          <label>\n            Edit Review:\n            <textarea\n              type=\"text\"\n              rows={10}\n              cols={78}\n              name=\"content\"\n              value={content}\n              onChange={handleChange}\n            />\n          </label>\n          <button className=\"edit\">UPDATE</button>\n        {/* <button onClick={() => handleOpen(false)}>CANCEL</button> */}\n        </form>\n      // </div>\n      // </div>\n  );\n}\n\nexport default ReviewEdit;\n"]},"metadata":{},"sourceType":"module"}