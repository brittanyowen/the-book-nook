{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/containers/ReviewsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReviewCreate from \"../components/ReviewCreate\";\nimport Reviews from \"../components/Reviews\";\nimport { destroyReview, putReview } from '../services/reviews';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReviewsContainer(props) {\n  _s();\n\n  const {\n    book\n  } = props;\n  useEffect(() => {\n    const fetchReviews = async bookId => {\n      const reviewData = await getAllReviews(bookId);\n      setReviews(reviewData);\n    };\n\n    fetchReviews(id);\n  }, []);\n\n  const reviewCreate = async (bookId, reviewData) => {\n    const newReview = await postReview(bookId, reviewData);\n    setReviews(prevState => [...prevState, newReview]); // history.push(`/books/${id}`);\n  };\n\n  const reviewUpdate = async (bookId, id, reviewData) => {\n    const updatedReview = await putReview(bookId, id, reviewData);\n    setReviews(prevState => prevState.map(review => {\n      return review.id === Number(id) ? updatedReview : review;\n    }));\n  };\n\n  const reviewDelete = async (bookId, id) => {\n    await destroyReview(bookId, id);\n    setReviews(prevState => prevState.filter(review => review.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews-container\",\n    children: [/*#__PURE__*/_jsxDEV(ReviewCreate, {\n      book: book\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reviews, {\n      reviews: reviews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReviewsContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ReviewsContainer;\nexport default ReviewsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewsContainer\");","map":{"version":3,"sources":["/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/containers/ReviewsContainer.jsx"],"names":["React","ReviewCreate","Reviews","destroyReview","putReview","ReviewsContainer","props","book","useEffect","fetchReviews","bookId","reviewData","getAllReviews","setReviews","id","reviewCreate","newReview","postReview","prevState","reviewUpdate","updatedReview","map","review","Number","reviewDelete","filter","reviews"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,qBAAzC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAUD,KAAhB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACrC,YAAMC,UAAU,GAAG,MAAMC,aAAa,CAACF,MAAD,CAAtC;AACAG,MAAAA,UAAU,CAACF,UAAD,CAAV;AACD,KAHD;;AAIAF,IAAAA,YAAY,CAACK,EAAD,CAAZ;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,YAAY,GAAG,OAAOL,MAAP,EAAeC,UAAf,KAA8B;AACjD,UAAMK,SAAS,GAAG,MAAMC,UAAU,CAACP,MAAD,EAASC,UAAT,CAAlC;AACAE,IAAAA,UAAU,CAAEK,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeF,SAAf,CAAhB,CAAV,CAFiD,CAGjD;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAG,OAAOT,MAAP,EAAeI,EAAf,EAAmBH,UAAnB,KAAkC;AACrD,UAAMS,aAAa,GAAG,MAAMhB,SAAS,CAACM,MAAD,EAASI,EAAT,EAAaH,UAAb,CAArC;AACAE,IAAAA,UAAU,CAACK,SAAS,IAAIA,SAAS,CAACG,GAAV,CAAcC,MAAM,IAAI;AAC9C,aAAOA,MAAM,CAACR,EAAP,KAAcS,MAAM,CAACT,EAAD,CAApB,GAA2BM,aAA3B,GAA2CE,MAAlD;AACD,KAFuB,CAAd,CAAV;AAGD,GALD;;AAOA,QAAME,YAAY,GAAG,OAAOd,MAAP,EAAeI,EAAf,KAAsB;AACzC,UAAMX,aAAa,CAACO,MAAD,EAASI,EAAT,CAAnB;AACAD,IAAAA,UAAU,CAACK,SAAS,IAAIA,SAAS,CAACO,MAAV,CAAiBH,MAAM,IAAIA,MAAM,CAACR,EAAP,KAAcA,EAAzC,CAAd,CAAV;AAED,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEmB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApCQrB,gB;;KAAAA,gB;AAsCT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport ReviewCreate from \"../components/ReviewCreate\"\nimport Reviews from \"../components/Reviews\"\nimport { destroyReview, putReview } from '../services/reviews';\n\nfunction ReviewsContainer(props) {\n  const { book} = props; \n\n  useEffect(() => {\n    const fetchReviews = async (bookId) => {\n      const reviewData = await getAllReviews(bookId);\n      setReviews(reviewData);\n    };\n    fetchReviews(id);\n  }, []);\n\n  const reviewCreate = async (bookId, reviewData) => {\n    const newReview = await postReview(bookId, reviewData);\n    setReviews((prevState) => [...prevState, newReview]);\n    // history.push(`/books/${id}`);\n  };\n\n  const reviewUpdate = async (bookId, id, reviewData) => {\n    const updatedReview = await putReview(bookId, id, reviewData)\n    setReviews(prevState => prevState.map(review => {\n      return review.id === Number(id) ? updatedReview : review\n    }))\n  }\n\n  const reviewDelete = async (bookId, id) => {\n    await destroyReview(bookId, id);\n    setReviews(prevState => prevState.filter(review => review.id !== id))\n    \n  }\n\n  return (\n    <div className=\"reviews-container\">\n      <ReviewCreate book={book} />\n      <Reviews reviews={reviews}/>\n    </div>\n  );\n}\n\nexport default ReviewsContainer;"]},"metadata":{},"sourceType":"module"}