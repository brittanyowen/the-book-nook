{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/containers/BooksContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Books from \"../screens/Books\";\nimport BookDetails from \"../screens/BookDetails\";\nimport { getAllBooks, postBook, putBook } from \"../services/books\"; // import { getAllReviews } from \"../services/reviews\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BooksContainer(props) {\n  _s();\n\n  const [books, setBooks] = useState([]); // const [reviews, setReviews] = useState([]);\n\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const bookData = await getAllBooks();\n      setBooks(bookData);\n    };\n\n    fetchBooks();\n  }, []); // useEffect(() => {\n  //   const fetchReviews = async () => {\n  //     const reviewData = await getAllReviews();\n  //     setReviews(reviewData);\n  //   };\n  //   fetchReviews();\n  // }, []);\n  // const handleCreate = async (bookData) => {\n  //   const newBook = await postBook(bookData);\n  //   setBooks(prevState => [...prevState, newBook])\n  //   history.push('/books')\n  // }\n  // const handleUpdate = async (id, bookData) => {\n  //   const updatedBook = await putBook(id, bookData)\n  //   setBooks(prevState => prevState.map(food => {\n  //     return bookData.id === Number(id) ? updatedBook : book\n  //   }))\n  //   history.push('/books')\n  // }\n  // const handleDelete = async (id) => {\n  //   await destroyBook(id);\n  //   setBooks(prevState => prevState.filter(book => book.id !== id))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"book/:id\",\n      children: /*#__PURE__*/_jsxDEV(BookDetails, {\n        books: books\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Books, {\n        books: books,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BooksContainer, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = BooksContainer;\nexport default BooksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksContainer\");","map":{"version":3,"sources":["/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/containers/BooksContainer.jsx"],"names":["React","useState","useEffect","Switch","Route","Books","BookDetails","getAllBooks","postBook","putBook","BooksContainer","props","books","setBooks","currentUser","fetchBooks","bookData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,mBAA/C,C,CACA;;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAD6B,CAE7B;;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBH,KAAxB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMT,WAAW,EAAlC;AACAM,MAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT,CAL6B,CAa7B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,KAAK,EAAEH;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,WAAW,EAAEE;AAFf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvDQJ,c;;KAAAA,c;AAyDT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Books from \"../screens/Books\"\nimport BookDetails from \"../screens/BookDetails\"\n\nimport { getAllBooks, postBook, putBook } from \"../services/books\"\n// import { getAllReviews } from \"../services/reviews\"\n\n\nfunction BooksContainer(props) {\n  const [books, setBooks] = useState([]);\n  // const [reviews, setReviews] = useState([]);\n  const { currentUser } = props\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const bookData = await getAllBooks();\n      setBooks(bookData);\n    };\n    fetchBooks();\n  }, []);\n\n  // useEffect(() => {\n  //   const fetchReviews = async () => {\n  //     const reviewData = await getAllReviews();\n  //     setReviews(reviewData);\n  //   };\n  //   fetchReviews();\n  // }, []);\n\n  // const handleCreate = async (bookData) => {\n  //   const newBook = await postBook(bookData);\n  //   setBooks(prevState => [...prevState, newBook])\n  //   history.push('/books')\n  // }\n\n  // const handleUpdate = async (id, bookData) => {\n  //   const updatedBook = await putBook(id, bookData)\n  //   setBooks(prevState => prevState.map(food => {\n  //     return bookData.id === Number(id) ? updatedBook : book\n  //   }))\n  //   history.push('/books')\n  // }\n\n  // const handleDelete = async (id) => {\n  //   await destroyBook(id);\n  //   setBooks(prevState => prevState.filter(book => book.id !== id))\n  // }\n\n  return (\n    <Switch>\n        <Route path=\"book/:id\">\n          <BookDetails\n            books={books}\n          />\n        </Route>\n      <Route path=\"/\">\n        <Books\n          books={books}\n          currentUser={currentUser}\n        />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default BooksContainer;\n"]},"metadata":{},"sourceType":"module"}