{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport ReviewEdit from \"./ReviewEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Reviews(props) {\n  _s();\n\n  const [open, handleOpen] = useState(false);\n  const {\n    bookId,\n    id\n  } = useParams();\n  const {\n    reviews,\n    currentUser,\n    reviewUpdate,\n    reviewDelete,\n    book\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [reviews.map(review => {\n      var _review$user;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: (_review$user = review.user) === null || _review$user === void 0 ? void 0 : _review$user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === (review === null || review === void 0 ? void 0 : review.user_id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/books/${bookId}/reviews/${id}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpen(review.id),\n              children: \"EDIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => reviewDelete(book === null || book === void 0 ? void 0 : book.id, review.id),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    }), open && /*#__PURE__*/_jsxDEV(ReviewEdit // open={open}\n    , {\n      handleOpen: handleOpen,\n      reviewUpdate: reviewUpdate,\n      book: book,\n      currentUser: currentUser,\n      reviews: reviews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reviews, \"Ct07sJ2QSn54VrMaDPQY+hbU7Vw=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/Reviews.jsx"],"names":["React","useState","Link","useParams","ReviewEdit","Reviews","props","open","handleOpen","bookId","id","reviews","currentUser","reviewUpdate","reviewDelete","book","map","review","user","username","content","user_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBP,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM;AAACQ,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAeP,SAAS,EAA9B;AAEA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA,YAAtC;AAAoDC,IAAAA;AAApD,MAA6DT,KAAnE;AACA,sBACE;AAAA,eACGK,OAAO,CAACK,GAAR,CAAaC,MAAD;AAAA;;AAAA,0BACX;AAAA,gCACE;AAAA,oCAAKA,MAAM,CAACC,IAAZ,iDAAK,aAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIF,MAAM,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGG,CAAAR,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEF,EAAb,OAAoBO,MAApB,aAAoBA,MAApB,uBAAoBA,MAAM,CAAEI,OAA5B,kBACC;AAAA,kCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASZ,MAAO,YAAWC,EAAG,EAAzC;AAAA,mCACE;AAAQ,cAAA,OAAO,EAAE,MAAMF,UAAU,CAACS,MAAM,CAACP,EAAR,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADA,eAIE;AAAQ,YAAA,OAAO,EAAE,MAAMI,YAAY,CAACC,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEL,EAAP,EAAWO,MAAM,CAACP,EAAlB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,wBAJJ;AAAA,SAAUO,MAAM,CAACP,EAAjB;AAAA;AAAA;AAAA;AAAA,cADW;AAAA,KAAZ,CADH,EAeGH,IAAI,iBACH,QAAC,UAAD,CACE;AADF;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,YAAY,EAAEK,YAHhB;AAIE,MAAA,IAAI,EAAEE,IAJR;AAKE,MAAA,WAAW,EAAEH,WALf;AAME,MAAA,OAAO,EAAED;AANX;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAjCQN,O;UAEcF,S;;;KAFdE,O;AAmCT,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Link, useParams } from \"react-router-dom\"\nimport ReviewEdit from \"./ReviewEdit\"\n\nfunction Reviews(props) {\n  const [open, handleOpen] = useState(false)\n  const {bookId, id} = useParams();\n\n  const { reviews, currentUser, reviewUpdate, reviewDelete, book } = props; \n  return (\n    <div>\n      {reviews.map((review) => (\n        <div key={review.id}>\n          <h6>{review.user?.username}</h6>\n          <p>{review.content}</p>\n          {currentUser?.id === review?.user_id && (\n            <>\n            <Link to={`/books/${bookId}/reviews/${id}`}>\n              <button onClick={() => handleOpen(review.id)}>EDIT</button>\n            </Link>\n              <button onClick={() => reviewDelete(book?.id, review.id)}>DELETE</button>\n              </>\n          )}\n        </div>\n      ))}\n      {open && (\n        <ReviewEdit\n          // open={open}\n          handleOpen={handleOpen}\n          reviewUpdate={reviewUpdate}\n          book={book}\n          currentUser={currentUser}\n          reviews={reviews}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;"]},"metadata":{},"sourceType":"module"}