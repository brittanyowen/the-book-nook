{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/ReviewCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { postReview } from \"../services/reviews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReviewCreate(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    content: \"\"\n  });\n  const {\n    content\n  } = formData;\n  const {\n    book,\n    setReviews,\n    id\n  } = props;\n  const history = useHistory();\n\n  const reviewCreate = async reviewData => {\n    const newReview = await postReview(reviewData);\n    setReviews(prevState => [...prevState, newReview]);\n    history.push(`/books/${id}`);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      reviewCreate(formData);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"What did you think of \", book === null || book === void 0 ? void 0 : book.title, \"?\", /*#__PURE__*/_jsxDEV(\"input\", {\n        children: [\"type=\\\"text\\\" name=\\\"content\\\" value=\", content, \"onChange=\", handleChange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReviewCreate, \"k5jmEhvYsqQaEmqiHavTeVijNhE=\", false, function () {\n  return [useHistory];\n});\n\n_c = ReviewCreate;\nexport default ReviewCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewCreate\");","map":{"version":3,"sources":["/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/ReviewCreate.jsx"],"names":["useState","useHistory","postReview","ReviewCreate","props","formData","setFormData","content","book","setReviews","id","history","reviewCreate","reviewData","newReview","prevState","push","handleChange","e","name","value","target","preventDefault","title"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACvCO,IAAAA,OAAO,EAAE;AAD8B,GAAD,CAAxC;AAGA,QAAM;AAAEA,IAAAA;AAAF,MAAcF,QAApB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB,MAA2BN,KAAjC;AACA,QAAMO,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACzC,UAAMC,SAAS,GAAG,MAAMZ,UAAU,CAACW,UAAD,CAAlC;AACAJ,IAAAA,UAAU,CAAEM,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,SAAf,CAAhB,CAAV;AACAH,IAAAA,OAAO,CAACK,IAAR,CAAc,UAASN,EAAG,EAA1B;AACD,GAJD;;AAMA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAf,IAAAA,WAAW,CAAES,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1B,OAACI,IAAD,GAAQC;AAFkB,KAAhB,CAAD,CAAX;AAID,GAND;;AAOA,sBACE;AACE,IAAA,QAAQ,EAAGF,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACI,cAAF;AACAV,MAAAA,YAAY,CAACP,QAAD,CAAZ;AACD,KAJH;AAAA,2BAME;AAAA,2CACyBG,IADzB,aACyBA,IADzB,uBACyBA,IAAI,CAAEe,KAD/B,oBAEE;AAAA,4DACoChB,OADpC,eAEYU,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtCQd,Y;UAMSF,U;;;KANTE,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { postReview } from \"../services/reviews\";\n\nfunction ReviewCreate(props) {\n  const [formData, setFormData] = useState({\n    content: \"\",\n  });\n  const { content } = formData;\n  const { book, setReviews, id } = props;\n  const history = useHistory();\n\n  const reviewCreate = async (reviewData) => {\n    const newReview = await postReview(reviewData);\n    setReviews((prevState) => [...prevState, newReview]);\n    history.push(`/books/${id}`);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        reviewCreate(formData);\n      }}\n    >\n      <label>\n        What did you think of {book?.title}?\n        <input>\n          type=\"text\" name=\"content\" value={content}\n          onChange={handleChange}\n        </input>\n      </label>\n      \n    </form>\n  );\n}\n\nexport default ReviewCreate;\n"]},"metadata":{},"sourceType":"module"}