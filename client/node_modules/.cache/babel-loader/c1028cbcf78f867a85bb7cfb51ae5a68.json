{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/ReviewEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReviewEdit(props) {\n  _s();\n\n  const {\n    handleOpen,\n    reviewUpdate,\n    currentUser,\n    reviews\n  } = props;\n  const {\n    bookId,\n    id\n  } = useParams();\n  const [reviewData, setReviewData] = useState({\n    content: \"\" // user_id: currentUser?.id,\n    // book_id: Number(params.id),\n\n  });\n  const {\n    content\n  } = reviewData;\n  useEffect(() => {\n    const prefillReviewData = () => {\n      const reviewItem = reviews.find(review => (review === null || review === void 0 ? void 0 : review.id) === Number(id));\n      console.log(review.id, Number);\n      setReviewData({\n        content: reviewItem === null || reviewItem === void 0 ? void 0 : reviewItem.content // user_id: reviewItem?.currentUser?.id,\n        // book_id: Number(reviewItem?.params?.id),\n\n      });\n    };\n\n    if (reviews.length) {\n      prefillReviewData();\n    }\n  }, [reviews, id]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setReviewData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-edit-container\",\n    onClick: e => handleOpen(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-edit\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          reviewUpdate(bookId, id, reviewData);\n          handleOpen(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Edit Review:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"content\",\n            value: content,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpen(false),\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReviewEdit, \"6Zy36Rpmo2b5+kjS4WkNCZoGrMA=\", false, function () {\n  return [useParams];\n});\n\n_c = ReviewEdit;\nexport default ReviewEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewEdit\");","map":{"version":3,"sources":["/Users/brittanyowen/General_Assembly/sei/sapphire/unit_4/the-book-nook/client/src/components/ReviewEdit.jsx"],"names":["React","useState","useEffect","useParams","ReviewEdit","props","handleOpen","reviewUpdate","currentUser","reviews","bookId","id","reviewData","setReviewData","content","prefillReviewData","reviewItem","find","review","Number","console","log","length","handleChange","e","name","value","target","prevState","stopPropagation","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA;AAAzC,MAAqDJ,KAA3D;AACA,QAAM;AAACK,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAeR,SAAS,EAA9B;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC;AAC3Ca,IAAAA,OAAO,EAAE,EADkC,CAE3C;AACA;;AAH2C,GAAD,CAA5C;AAKA,QAAM;AAAEA,IAAAA;AAAF,MAAcF,UAApB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,iBAAiB,GAAG,MAAM;AAC9B,YAAMC,UAAU,GAAGP,OAAO,CAACQ,IAAR,CAAcC,MAAD,IAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEP,EAAR,MAAeQ,MAAM,CAACR,EAAD,CAA9C,CAAnB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACP,EAAnB,EAAuBQ,MAAvB;AACAN,MAAAA,aAAa,CAAC;AACZC,QAAAA,OAAO,EAAEE,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEF,OADT,CAEZ;AACA;;AAHY,OAAD,CAAb;AAKD,KARD;;AASA,QAAIL,OAAO,CAACa,MAAZ,EAAoB;AAClBP,MAAAA,iBAAiB;AAClB;AACF,GAbQ,EAaN,CAACN,OAAD,EAAUE,EAAV,CAbM,CAAT;;AAeA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAd,IAAAA,aAAa,CAAEe,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5B,OAACH,IAAD,GAAQC;AAFoB,KAAhB,CAAD,CAAb;AAID,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,OAAO,EAAGF,CAAD,IAAOlB,UAAU,CAAC,KAAD,CAAjE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAGkB,CAAD,IAAOA,CAAC,CAACK,eAAF,EAA7C;AAAA,6BACE;AACE,QAAA,QAAQ,EAAGL,CAAD,IAAO;AACfA,UAAAA,CAAC,CAACM,cAAF;AACAvB,UAAAA,YAAY,CAACG,MAAD,EAASC,EAAT,EAAaC,UAAb,CAAZ;AACAN,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SALH;AAAA,gCAOE;AAAA,kDAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,KAAK,EAAEQ,OAHT;AAIE,YAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAgBE;AAAQ,UAAA,OAAO,EAAE,MAAMjB,UAAU,CAAC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzDQF,U;UAEcD,S;;;KAFdC,U;AA2DT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ReviewEdit(props) {\n  const { handleOpen, reviewUpdate, currentUser, reviews } = props;\n  const {bookId, id} = useParams();\n  const [reviewData, setReviewData] = useState({\n    content: \"\",\n    // user_id: currentUser?.id,\n    // book_id: Number(params.id),\n  });\n  const { content } = reviewData;\n  useEffect(() => {\n    const prefillReviewData = () => {\n      const reviewItem = reviews.find((review) => review?.id === Number(id));\n      console.log(review.id, Number)\n      setReviewData({\n        content: reviewItem?.content,\n        // user_id: reviewItem?.currentUser?.id,\n        // book_id: Number(reviewItem?.params?.id),\n      });\n    };\n    if (reviews.length) {\n      prefillReviewData();\n    }\n  }, [reviews, id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setReviewData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"review-edit-container\" onClick={(e) => handleOpen(false)}>\n      <div className=\"review-edit\" onClick={(e) => e.stopPropagation()}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            reviewUpdate(bookId, id, reviewData);\n            handleOpen(false)\n          }}\n        >\n          <label>\n            Edit Review:\n            <input\n              type=\"text\"\n              name=\"content\"\n              value={content}\n              onChange={handleChange}\n            />\n          </label>\n          <button onClick={() => handleOpen(false)}>CANCEL</button>\n          <button type=\"submit\">SAVE</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewEdit;\n"]},"metadata":{},"sourceType":"module"}